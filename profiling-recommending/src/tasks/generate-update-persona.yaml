# yaml-language-server: $schema=https://raw.githubusercontent.com/julep-ai/julep/refs/heads/dev/schemas/create_task_request.json
name: Generate and Update User Persona
description: A sophisticated system that generates and updates detailed user personas based on reading history and behavior.

################################################################################
############################# INPUT SCHEMA #####################################
################################################################################
input_schema:
  type: object
  properties:
    user_ppid:
      type: string
      description: The unique identifier for the user
    articles_read:
      type: array
      items:
        type: string
      description: List of articles the user has read
  required:
    - user_ppid
    - articles_read

################################################################################
############################# TOOLS ############################################
################################################################################

# Describing the tools that will be used in the workflow
tools:
  - name: get_user_from_ppid
    description: Get a user from the user ppid
    type: system
    system:
      resource: user
      operation: list
    
  - name: list_user_docs
    description: List the user docs
    type: system
    system:
      resource: user
      subresource: doc
      operation: list

  - name: create_user_doc
    description: Create a user doc
    type: system
    system:
      resource: user
      subresource: doc
      operation: create

################################################################################
############################# MAIN WORKFLOW ####################################
################################################################################
main:
# Step 0: Fetch user information using PPID
- tool: get_user_from_ppid
  arguments:
    limit: "1"
    sort_by: "'created_at'"
    direction: "'desc'"
    metadata_filter:
      ppid: inputs[0]['user_ppid']

# Step 1: Extract user details
- evaluate:
    user: _[0]

# Step 2: Fetch user's existing persona document
- tool: list_user_docs
  arguments:
    user_id: _['user']['id']
    limit: "1"
    sort_by: "'created_at'"
    direction: "'desc'"

# Step 3: Extract existing document if available
- evaluate:
    doc: _[0] if len(_) > 0 else {}

# Step 4: Extract existing persona content
- evaluate:
    user_persona: _['doc'].get('content', "")

# Step 5: Generate comprehensive user persona
- prompt:
    - role: user
      content: |
        You are an expert at creating detailed user personas for sports fans. Your task is to write a comprehensive user persona based on the provided user data and article reads. This persona will help in recommending articles to the user.

        #Input#
        Following is the user data 
        User details:
        {{outputs[1].user.metadata}}
                        
        User reading history:
        {{inputs[0].articles_read}}
        
        User past persona:
        {{_.user_persona}}

        #Task#
        Let's think of the following steps carefully. Using the user data, create a user persona that includes the following sections:

        1. Demographics
        2. Psychographics
        3. Content Interests


        For each section, follow these process:

        1. Demographics:
          - Provide the user's age, gender, and location.
          - If any information is missing, make a reasonable assumption based on other details provided.

        2. Psychographics:
          - Describe the user's personality traits.
          - Create an interest graph that shows the user's primary and secondary interests related to sports, sports figures and other relevant areas.

        3. Content Interests:
          - List and briefly describe the user's thematic interests.
          - Specify article categories that would appeal to this user.
          - Identify entity preferences (e.g., specific teams, athletes, or sports figures).
          - Detail the user's sports preferences, including favorite sports, leagues, and events.
          - Assess the user's engagement level with sports content (e.g., casual, dedicated, or super-fan).
          - Draw any correlations between the user's interests in various topics, sports, and entities.
          - Detail the user's content needs and expectations  


        #Instructions#

        When writing the user persona:
        - Be specific and provide examples where possible.
        - Make logical inferences based on the given information.
        - Ensure consistency throughout the persona.
        - Use bullet points or short paragraphs for easy readability.

        Format your response as follows:
        - Use headers for each main section (Demographics, Psychographics, Content Interests).
        - Use subheaders for subsections within Content Interests.
        - Include a brief introduction and conclusion.

        Present your final user persona within <user_persona> tags. Begin with a concise introduction, then proceed with the detailed sections as outlined above.
        Your work will be evaluated for comprehensive and detailed persona.
  unwrap: true
  tool_choice: none  

# Step 6: Create and store new persona document
- tool: create_user_doc
  arguments:
    user_id: inputs[2]['user']['id']
    data:
      embed_instruction: "'Represent the query for User persona used for document retrieval: '"
      title: "'User Persona'"
      content: _