name: Trending Reels Hook Generator

input_schema:
  type: object
  properties:
    topic:
      type: string
      description: The topic to generate trending reels for

tools:
- name: api_tool_call
  type: api_call
  api_call:
    method: GET 
    url: "https://instagram-scraper-api2.p.rapidapi.com/v1/hashtag"
    headers:
      x-rapidapi-key: "2d112f8d17msha0aae074c5b5c63p14fc61jsn2a7e5a20d48f"
      x-rapidapi-host: "instagram-scraper-api2.p.rapidapi.com"
    follow_redirects: true

- name: get_hooks_doc
  type: system
  system:
    resource: agent
    subresource: doc
    operation: list

main:

- tool: api_tool_call
  arguments:
    params:
      hashtag: "inputs[0].topic"

- evaluate:
    summary:  "list({
                      'caption': ((response.get('caption') or {}).get('text') or 'No Caption Available'),
                      'code': (response.get('code') or 'No Code Available'),
                      'play_count': (response.get('play_count') or 0),
                      'like_count': (response.get('like_count') or 0),
                      'media_id': ((response.get('caption') or {}).get('id') or 0),
                      'hashtags': ((response.get('caption') or {}).get('hashtags') or 'No Hashtag Available'),
                      'video_duration': (response.get('video_duration') or 0),
                      'comment_count': (response.get('comment_count') or 0),
                      'reshare_count': (response.get('reshare_count') or 0),
                      'has_audio': (response.get('has_audio') or False),
                      'audio_type': (((response.get('clips_metadata') or {}).get('audio_type')) or 'No Audio Type Available'),
                      'username': (((response.get('user') or {}).get('username')) or 'No Username Available'),
                      'full_name': (((response.get('user') or {}).get('full_name')) or 'No Full Name Available'),
                      'profile_pic_url': (((response.get('user') or {}).get('profile_pic_url')) or 'No Profile Pic URL Available'),
                      'virality_score': (((response.get('reshare_count') or 0) / (response.get('play_count') or 1)) if (response.get('play_count') or 0) > 0 else 0),
                      'engagement_score': (((response.get('like_count') or 0) / (response.get('play_count') or 1)) if (response.get('play_count') or 0) > 0 else 0),
                      'video_duration': (response.get('video_duration') or 0),
                      'video_url_360': ([v.get('url') for v in (response.get('video_versions') or []) if v.get('width') == 360][0] if response.get('video_versions') else 'No URL Available')
                      } for response in _['json']['data']['items'])"  

- over: _['summary']
  parallelism: 4
  map:
    prompt:
      - role: system
        content: >-
          You are a skilled agent tasked with creating a single description for each trending real estate reel for the given topic: {{inputs[0].topic}}.
          Use information gathered from the following data sources to gather the most relevant information:

          Search Results: {{_['caption']}}
          Virality Score: {{_['virality_score']}}
          Engagement Score: {{_['engagement_score']}}

          Provide a json repsonse containing the caption, virality score, enagement score and one-liner description for the reel.
    unwrap: true   

- evaluate:
    summary: outputs[1]['summary']
    description: list(load_json(res.replace("```json", "").replace("```", "")) for res in _)

- tool: get_hooks_doc
  arguments:
    agent_id: "agent.id"
                          
- evaluate:
    hooks_doc: _[0]['content']

- over: outputs[3]['description']
  parallelism: 4
  map:
    prompt:
      - role: system
        content: >-
          You are a skilled content creator tasked with generating 3 engaging video hooks for each reel having its description and caption. Use the following document containing hook templates to create effective hooks:
          
          {{_.hooks_doc}}
          
          Here are the caption and description to create hooks for:

          Caption: {{_['caption']}}
          Description: {{_['description']}}
          Virality Score: {{_['virality_score']}}
          Engagement Score: {{_['engagement_score']}}

          Your task is to generate 3 hooks (for the reel) by adapting the most suitable templates from the document. Each hook should be no more than 1 sentence long and directly relate to its corresponding idea.
          
          Basically, all the ideas are taken from a search about this topic, which is {{inputs[0].topic}}. You should focus on this while writing the hooks.

          Ensure that each hook is creative, engaging, and relevant to its idea while following the structure of the chosen template.

          Provide a json repsonse containing the caption, virality score, enagement score, description and the list of 3 hooks for the reel.
    unwrap: true

- evaluate:
    summary: outputs[3]['summary']
    hooks: list(load_json(res.replace("```json", "").replace("```", "")) for res in _)