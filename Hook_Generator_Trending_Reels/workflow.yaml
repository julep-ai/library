name: Trending Reels Hook Generator

input_schema:
  type: object
  properties:
    topic:
      type: string
      description: The topic to generate trending reels for

tools:
- name: api_tool_call
  type: api_call
  api_call:
    method: GET 
    url: "https://instagram-scraper-api3.p.rapidapi.com/reels_by_keyword"
    headers:
      x-rapidapi-key: "7b1f071fe3msh9b81fd788e08774p17e9e4jsnf78f4f264d2d"
      x-rapidapi-host: "instagram-scraper-api3.p.rapidapi.com"
    follow_redirects: true

- name: get_hooks_doc
  type: system
  system:
    resource: agent
    subresource: doc
    operation: list

main:

- tool: api_tool_call
  arguments:
    params:
      query: "inputs[0].topic"

- evaluate:
    summary:  "list({
              'caption': 'No Caption Available' if 'media' not in clip or 'caption' not in clip['media'] or 'text' not in clip['media']['caption'] else clip['media']['caption']['text'],
              'code': 'No Code Available' if 'media' not in clip or 'code' not in clip['media'] else clip['media']['code'],
              'media_id': 0 if 'media' not in clip or 'caption' not in clip['media'] or 'media_id' not in clip['media']['caption'] else clip['media']['caption']['media_id'],
              'video_duration': 0 if 'media' not in clip or 'video_duration' not in clip['media'] else clip['media']['video_duration'],
              'thumbnail_url': 'No Thumbnail URL Available' if 'media' not in clip or 'image_versions2' not in clip['media'] or 'candidates' not in clip['media']['image_versions2'] or not clip['media']['image_versions2']['candidates'] or 'url' not in clip['media']['image_versions2']['candidates'][0] else clip['media']['image_versions2']['candidates'][0]['url'],
              'play_count': 0 if 'media' not in clip or 'play_count' not in clip['media'] else clip['media']['play_count'],
              'like_count': 0 if 'media' not in clip or 'like_count' not in clip['media'] else clip['media']['like_count'],
              'comment_count': 0 if 'media' not in clip or 'comment_count' not in clip['media'] else clip['media']['comment_count'],
              'reshare_count': 0 if 'media' not in clip or 'reshare_count' not in clip['media'] else clip['media']['reshare_count'],
              'has_audio': False if 'media' not in clip or 'has_audio' not in clip['media'] else clip['media']['has_audio'],
              'audio_type': 'No Audio Type Available' if 'media' not in clip or 'clips_metadata' not in clip['media'] or 'audio_type' not in clip['media']['clips_metadata'] else clip['media']['clips_metadata']['audio_type'],
              'username': 'No Username Available' if 'media' not in clip or 'user' not in clip['media'] or 'username' not in clip['media']['user'] else clip['media']['user']['username'],
              'full_name': 'No Full Name Available' if 'media' not in clip or 'user' not in clip['media'] or 'full_name' not in clip['media']['user'] else clip['media']['user']['full_name'],
              'profile_pic_url': 'No Profile Pic URL Available' if 'media' not in clip or 'user' not in clip['media'] or 'profile_pic_url' not in clip['media']['user'] else clip['media']['user']['profile_pic_url'],
              'virality_score': (0 if 'media' not in clip or 'reshare_count' not in clip['media'] else clip['media']['reshare_count']) / (1 if 'media' not in clip or 'play_count' not in clip['media'] or clip['media']['play_count'] == 0 else clip['media']['play_count']),
              'engagement_score': (0 if 'media' not in clip or 'like_count' not in clip['media'] else clip['media']['like_count']) / (1 if 'media' not in clip or 'play_count' not in clip['media'] or clip['media']['play_count'] == 0 else clip['media']['play_count'])
              } for clip in _['json']['data']['reels_serp_modules'][0]['clips'])"

- over: _['summary']
  parallelism: 4
  map:
    prompt:
      - role: system
        content: >-
          You are a skilled agent tasked with creating a single description for each trending real estate reel for the given topic: {{inputs[0].topic}}.
          Use information gathered from the following data sources to gather the most relevant information:

          Search Results: {{_['caption']}}
          Virality Score: {{_['virality_score']}}
          Engagement Score: {{_['engagement_score']}}

          Provide a json repsonse containing the caption, virality score, enagement score and one-liner description for the reel.
    unwrap: true   

- evaluate:
    summary: outputs[1]['summary']
    description: list(load_json(res.replace("```json", "").replace("```", "")) for res in _)

- tool: get_hooks_doc
  arguments:
    agent_id: "agent.id"
                          
- evaluate:
    hooks_doc: _[0]['content']

- over: outputs[3]['description']
  parallelism: 4
  map:
    prompt:
      - role: system
        content: >-
          You are a skilled content creator tasked with generating 3 engaging video hooks for each reel having its description and caption. Use the following document containing hook templates to create effective hooks:
          
          {{_.hooks_doc}}
          
          Here are the caption and description to create hooks for:

          Caption: {{_['caption']}}
          Description: {{_['description']}}
          Virality Score: {{_['virality_score']}}
          Engagement Score: {{_['engagement_score']}}

          Your task is to generate 3 hooks (for the reel) by adapting the most suitable templates from the document. Each hook should be no more than 1 sentence long and directly relate to its corresponding idea.
          
          Basically, all the ideas are taken from a search about this topic, which is {{inputs[0].topic}}. You should focus on this while writing the hooks.

          Ensure that each hook is creative, engaging, and relevant to its idea while following the structure of the chosen template.

          Provide a json repsonse containing the caption, virality score, enagement score, description and the list of 3 hooks for the reel.
    unwrap: true

- evaluate:
    summary: outputs[3]['summary']
    hooks: list(load_json(res.replace("```json", "").replace("```", "")) for res in _)