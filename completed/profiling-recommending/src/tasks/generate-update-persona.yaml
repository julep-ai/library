# yaml-language-server: $schema=https://raw.githubusercontent.com/julep-ai/julep/refs/heads/dev/schemas/create_task_request.json
name: Generate and Update User Persona
description: A sophisticated system that generates and updates detailed user personas based on reading history and behavior.

################################################################################
############################# INPUT SCHEMA #####################################
################################################################################
input_schema:
  type: object
  properties:
    user_ppid:
      type: string
      description: The unique identifier for the user
    articles_read:
      type: array
      items:
        type: string
      description: List of articles the user has read
  required:
    - user_ppid
    - articles_read

################################################################################
############################# TOOLS ############################################
################################################################################

# Describing the tools that will be used in the workflow
tools:
  - name: get_user_from_ppid
    description: Get a user from the user ppid
    type: system
    system:
      resource: user
      operation: list
    
  - name: list_user_docs
    description: List the user docs
    type: system
    system:
      resource: user
      subresource: doc
      operation: list

  - name: create_user_doc
    description: Create a user doc
    type: system
    system:
      resource: user
      subresource: doc
      operation: create

################################################################################
############################# MAIN WORKFLOW ####################################
################################################################################
main:
# Step 0: Fetch user information using PPID
- tool: get_user_from_ppid
  arguments:
    limit: $ 1 
    sort_by: created_at
    direction: desc
    metadata_filter:
      ppid: $ steps[0].input.user_ppid # or _.user_ppid

# Step 1: Extract user details
- evaluate:
    user: $ _[0] # or steps[0].output[0]

# Step 2: Fetch user's existing persona document
- tool: list_user_docs
  arguments:
    limit: $ 1
    sort_by: created_at
    user_id: $ _.user.id # or steps.user.id
    direction: desc

# Step 3: Extract existing document if available
- evaluate:
    doc: $ _[0] if len(_) > 0 else {}

# Step 4: Extract existing persona content
- evaluate:
    user_persona: $ _.doc.get('content', "No persona found. The user does not have a persona yet.")

# Step 5: Generate comprehensive user persona
- prompt:
    - role: user
      content: |
        $ f"""
        You are an expert at creating user personas for American sports fans. Your task is to write a detailed content interest profile for a user based on their data and article reading history. Follow these instructions carefully:
        First, review the following information:
        <user_data> {steps[2].input['user']['metadata']} </user_data>
        <article_history> {steps[0].input['articles_read']} </article_history>
        <past_persona> {_['user_persona']} </past_persona>
        Now, follow these steps to create the content interest profile:
        1. Analyze the user data, focusing on the "sports_likes", "entity_likes", "top_sport" and "top_entity" fields.
        2. Review the article reading history and identify common themes among the articles. For example, "The Unknown Petty that took NASCAR World by Storm" would have a theme of "Legends and History".
        3. Create a detailed content interest profile for the user, covering:
          - User's key sports interests
          - User's key article theme interests
          - Correlations between the user's interests in various topics and sports

        4. Structure your output as follows:
          <content_interest_profile>
          - Primary Interests:
            [List 2-3 main interests]
          - Secondary Interests:
            [List 3-5 secondary interests]
          - Theme Interests:
            [List 4-6 theme interests]
          </content_interest_profile>

        5. When writing the content interest profile:
          - Be specific and use examples from the provided data
          - Make logical inferences based on the given information
          - Ensure consistency throughout the profile
          - Do not include any additional explanations or commentary

        Remember to focus solely on creating the content interest profile based on the provided information. Do not add any personal opinions or information not derived from the given data.
        """
  unwrap: true
  tool_choice: none  

# Step 6: Create and store new persona document
- tool: create_user_doc
  arguments:
    data:
      title: User Persona
      content: $ _
      embed_instruction: "Represent the query for retrieving supporting documents: "
    user_id: $ steps[2].input.user.id